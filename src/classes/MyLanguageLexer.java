// Generated from MyLanguage.g by ANTLR 4.5.3
package classes;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MyLanguageLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		ALGORITMO=1, FINALGORITMO=2, PROCESO=3, FINPROCESO=4, ESCRIBIR=5, COMO=6, 
		LEER=7, DIMENSION=8, SI=9, SINO=10, FINSI=11, SEGUN=12, HACER=13, VERDADERO=14, 
		FALSO=15, FINSEGUN=16, MIENTRAS=17, FINMIENTRAS=18, REPETIR=19, PARA=20, 
		FINPARA=21, DEFINIR=22, ENTONCES=23, RESERVADAS=24, SUBPROCESO=25, FINSUBPROCESO=26, 
		HASTA=27, COMMENT=28, LINE_COMMENT=29, WS=30, VAR=31, A=32, B=33, C=34, 
		D=35, E=36, F=37, G=38, H=39, I=40, J=41, K=42, L=43, M=44, N=45, O=46, 
		P=47, Q=48, R=49, S=50, T=51, U=52, V=53, W=54, X=55, Y=56, Z=57, PAR_IZQ=58, 
		PAR_DER=59, COR_IZQ=60, COR_DER=61, MULOP=62, SUMOP=63, MODOP=64, MODULO=65, 
		POTENCIA=66, ASIGNACION=67, NEGACION=68, ROP=69, SEPARADORES=70, SMCOLON=71, 
		COMMA=72, REAL=73, ENTERO=74, ID=75, CONTENIDO_IMPRIMIBLE=76, MENSAJE=77;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"ALGORITMO", "FINALGORITMO", "PROCESO", "FINPROCESO", "ESCRIBIR", "COMO", 
		"LEER", "DIMENSION", "SI", "SINO", "FINSI", "SEGUN", "HACER", "VERDADERO", 
		"FALSO", "FINSEGUN", "MIENTRAS", "FINMIENTRAS", "REPETIR", "PARA", "FINPARA", 
		"DEFINIR", "ENTONCES", "RESERVADAS", "SUBPROCESO", "FINSUBPROCESO", "HASTA", 
		"COMMENT", "LINE_COMMENT", "WS", "VAR", "A", "B", "C", "D", "E", "F", 
		"G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", 
		"U", "V", "W", "X", "Y", "Z", "PAR_IZQ", "PAR_DER", "COR_IZQ", "COR_DER", 
		"MULOP", "SUMOP", "MODOP", "MODULO", "POTENCIA", "ASIGNACION", "NEGACION", 
		"ROP", "SEPARADORES", "SMCOLON", "COMMA", "REAL", "ENTERO", "ID", "CONTENIDO_IMPRIMIBLE", 
		"MENSAJE"
	};

	private static final String[] _LITERAL_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, "'('", "')'", 
		"'['", "']'", null, null, "'%'", null, "'^'", "'<-'", "'~'", null, null, 
		"';'", "','"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, "ALGORITMO", "FINALGORITMO", "PROCESO", "FINPROCESO", "ESCRIBIR", 
		"COMO", "LEER", "DIMENSION", "SI", "SINO", "FINSI", "SEGUN", "HACER", 
		"VERDADERO", "FALSO", "FINSEGUN", "MIENTRAS", "FINMIENTRAS", "REPETIR", 
		"PARA", "FINPARA", "DEFINIR", "ENTONCES", "RESERVADAS", "SUBPROCESO", 
		"FINSUBPROCESO", "HASTA", "COMMENT", "LINE_COMMENT", "WS", "VAR", "A", 
		"B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", 
		"P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "PAR_IZQ", "PAR_DER", 
		"COR_IZQ", "COR_DER", "MULOP", "SUMOP", "MODOP", "MODULO", "POTENCIA", 
		"ASIGNACION", "NEGACION", "ROP", "SEPARADORES", "SMCOLON", "COMMA", "REAL", 
		"ENTERO", "ID", "CONTENIDO_IMPRIMIBLE", "MENSAJE"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MyLanguageLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MyLanguage.g"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2O\u0253\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2"+
		"\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3"+
		"\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13"+
		"\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3"+
		"\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3"+
		"\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3"+
		"\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3"+
		"\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3"+
		"\30\3\30\3\30\3\31\3\31\3\31\5\31\u0156\n\31\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35"+
		"\3\35\3\35\7\35\u017b\n\35\f\35\16\35\u017e\13\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\7\36\u0189\n\36\f\36\16\36\u018c\13\36\3\36"+
		"\3\36\3\37\6\37\u0191\n\37\r\37\16\37\u0192\3\37\3\37\3 \3 \3 \3 \3 \3"+
		" \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3"+
		" \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \3 \5 \u01c9"+
		"\n \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3"+
		"+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3"+
		"\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3"+
		"=\3=\3>\3>\3?\3?\3@\3@\3A\3A\3B\3B\3B\3B\3C\3C\3D\3D\3D\3E\3E\3F\3F\3"+
		"F\3F\3F\3F\3F\3F\3F\5F\u0221\nF\3G\3G\3H\3H\3I\3I\3J\6J\u022a\nJ\rJ\16"+
		"J\u022b\3J\3J\3J\6J\u0231\nJ\rJ\16J\u0232\5J\u0235\nJ\3K\6K\u0238\nK\r"+
		"K\16K\u0239\3L\3L\7L\u023e\nL\fL\16L\u0241\13L\3M\3M\3M\3M\6M\u0247\n"+
		"M\rM\16M\u0248\3N\3N\7N\u024d\nN\fN\16N\u0250\13N\3N\3N\4\u017c\u024e"+
		"\2O\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008d"+
		"H\u008fI\u0091J\u0093K\u0095L\u0097M\u0099N\u009bO\3\2&\4\2\f\f\17\17"+
		"\5\2\13\f\17\17\"\"\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2GGgg\4\2HHhh\4"+
		"\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQq"+
		"q\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2"+
		"ZZzz\4\2[[{{\4\2\\\\||\4\2,,\61\61\4\2--//\4\2>>@@\4\2((~~\3\2\62;\3\2"+
		"\60\60\4\2C\\c|\6\2\62;C\\aac|\u026a\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2"+
		"\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23"+
		"\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2"+
		"\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2"+
		"\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3"+
		"\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2"+
		"\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2"+
		"\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2["+
		"\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2"+
		"\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2"+
		"\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2"+
		"\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089"+
		"\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2"+
		"\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b"+
		"\3\2\2\2\3\u009d\3\2\2\2\5\u00a7\3\2\2\2\7\u00b4\3\2\2\2\t\u00bc\3\2\2"+
		"\2\13\u00c7\3\2\2\2\r\u00d0\3\2\2\2\17\u00d5\3\2\2\2\21\u00da\3\2\2\2"+
		"\23\u00e4\3\2\2\2\25\u00e7\3\2\2\2\27\u00ec\3\2\2\2\31\u00f2\3\2\2\2\33"+
		"\u00f8\3\2\2\2\35\u00fe\3\2\2\2\37\u0108\3\2\2\2!\u010e\3\2\2\2#\u0117"+
		"\3\2\2\2%\u0120\3\2\2\2\'\u012c\3\2\2\2)\u0134\3\2\2\2+\u0139\3\2\2\2"+
		"-\u0141\3\2\2\2/\u0149\3\2\2\2\61\u0155\3\2\2\2\63\u0157\3\2\2\2\65\u0162"+
		"\3\2\2\2\67\u0170\3\2\2\29\u0176\3\2\2\2;\u0184\3\2\2\2=\u0190\3\2\2\2"+
		"?\u01c8\3\2\2\2A\u01ca\3\2\2\2C\u01cc\3\2\2\2E\u01ce\3\2\2\2G\u01d0\3"+
		"\2\2\2I\u01d2\3\2\2\2K\u01d4\3\2\2\2M\u01d6\3\2\2\2O\u01d8\3\2\2\2Q\u01da"+
		"\3\2\2\2S\u01dc\3\2\2\2U\u01de\3\2\2\2W\u01e0\3\2\2\2Y\u01e2\3\2\2\2["+
		"\u01e4\3\2\2\2]\u01e6\3\2\2\2_\u01e8\3\2\2\2a\u01ea\3\2\2\2c\u01ec\3\2"+
		"\2\2e\u01ee\3\2\2\2g\u01f0\3\2\2\2i\u01f2\3\2\2\2k\u01f4\3\2\2\2m\u01f6"+
		"\3\2\2\2o\u01f8\3\2\2\2q\u01fa\3\2\2\2s\u01fc\3\2\2\2u\u01fe\3\2\2\2w"+
		"\u0200\3\2\2\2y\u0202\3\2\2\2{\u0204\3\2\2\2}\u0206\3\2\2\2\177\u0208"+
		"\3\2\2\2\u0081\u020a\3\2\2\2\u0083\u020c\3\2\2\2\u0085\u0210\3\2\2\2\u0087"+
		"\u0212\3\2\2\2\u0089\u0215\3\2\2\2\u008b\u0220\3\2\2\2\u008d\u0222\3\2"+
		"\2\2\u008f\u0224\3\2\2\2\u0091\u0226\3\2\2\2\u0093\u0229\3\2\2\2\u0095"+
		"\u0237\3\2\2\2\u0097\u023b\3\2\2\2\u0099\u0246\3\2\2\2\u009b\u024a\3\2"+
		"\2\2\u009d\u009e\5A!\2\u009e\u009f\5W,\2\u009f\u00a0\5M\'\2\u00a0\u00a1"+
		"\5]/\2\u00a1\u00a2\5c\62\2\u00a2\u00a3\5Q)\2\u00a3\u00a4\5g\64\2\u00a4"+
		"\u00a5\5Y-\2\u00a5\u00a6\5]/\2\u00a6\4\3\2\2\2\u00a7\u00a8\5K&\2\u00a8"+
		"\u00a9\5Q)\2\u00a9\u00aa\5[.\2\u00aa\u00ab\5A!\2\u00ab\u00ac\5W,\2\u00ac"+
		"\u00ad\5M\'\2\u00ad\u00ae\5]/\2\u00ae\u00af\5c\62\2\u00af\u00b0\5Q)\2"+
		"\u00b0\u00b1\5g\64\2\u00b1\u00b2\5Y-\2\u00b2\u00b3\5]/\2\u00b3\6\3\2\2"+
		"\2\u00b4\u00b5\5_\60\2\u00b5\u00b6\5c\62\2\u00b6\u00b7\5]/\2\u00b7\u00b8"+
		"\5E#\2\u00b8\u00b9\5I%\2\u00b9\u00ba\5e\63\2\u00ba\u00bb\5]/\2\u00bb\b"+
		"\3\2\2\2\u00bc\u00bd\5K&\2\u00bd\u00be\5Q)\2\u00be\u00bf\5[.\2\u00bf\u00c0"+
		"\5_\60\2\u00c0\u00c1\5c\62\2\u00c1\u00c2\5]/\2\u00c2\u00c3\5E#\2\u00c3"+
		"\u00c4\5I%\2\u00c4\u00c5\5e\63\2\u00c5\u00c6\5]/\2\u00c6\n\3\2\2\2\u00c7"+
		"\u00c8\5I%\2\u00c8\u00c9\5e\63\2\u00c9\u00ca\5E#\2\u00ca\u00cb\5c\62\2"+
		"\u00cb\u00cc\5Q)\2\u00cc\u00cd\5C\"\2\u00cd\u00ce\5Q)\2\u00ce\u00cf\5"+
		"c\62\2\u00cf\f\3\2\2\2\u00d0\u00d1\5E#\2\u00d1\u00d2\5]/\2\u00d2\u00d3"+
		"\5Y-\2\u00d3\u00d4\5]/\2\u00d4\16\3\2\2\2\u00d5\u00d6\5W,\2\u00d6\u00d7"+
		"\5I%\2\u00d7\u00d8\5I%\2\u00d8\u00d9\5c\62\2\u00d9\20\3\2\2\2\u00da\u00db"+
		"\5G$\2\u00db\u00dc\5Q)\2\u00dc\u00dd\5Y-\2\u00dd\u00de\5I%\2\u00de\u00df"+
		"\5[.\2\u00df\u00e0\5e\63\2\u00e0\u00e1\5Q)\2\u00e1\u00e2\5]/\2\u00e2\u00e3"+
		"\5[.\2\u00e3\22\3\2\2\2\u00e4\u00e5\5e\63\2\u00e5\u00e6\5Q)\2\u00e6\24"+
		"\3\2\2\2\u00e7\u00e8\5e\63\2\u00e8\u00e9\5Q)\2\u00e9\u00ea\5[.\2\u00ea"+
		"\u00eb\5]/\2\u00eb\26\3\2\2\2\u00ec\u00ed\5K&\2\u00ed\u00ee\5Q)\2\u00ee"+
		"\u00ef\5[.\2\u00ef\u00f0\5e\63\2\u00f0\u00f1\5Q)\2\u00f1\30\3\2\2\2\u00f2"+
		"\u00f3\5e\63\2\u00f3\u00f4\5I%\2\u00f4\u00f5\5M\'\2\u00f5\u00f6\5i\65"+
		"\2\u00f6\u00f7\5[.\2\u00f7\32\3\2\2\2\u00f8\u00f9\5O(\2\u00f9\u00fa\5"+
		"A!\2\u00fa\u00fb\5E#\2\u00fb\u00fc\5I%\2\u00fc\u00fd\5c\62\2\u00fd\34"+
		"\3\2\2\2\u00fe\u00ff\5k\66\2\u00ff\u0100\5I%\2\u0100\u0101\5c\62\2\u0101"+
		"\u0102\5G$\2\u0102\u0103\5A!\2\u0103\u0104\5G$\2\u0104\u0105\5I%\2\u0105"+
		"\u0106\5c\62\2\u0106\u0107\5]/\2\u0107\36\3\2\2\2\u0108\u0109\5K&\2\u0109"+
		"\u010a\5A!\2\u010a\u010b\5W,\2\u010b\u010c\5e\63\2\u010c\u010d\5]/\2\u010d"+
		" \3\2\2\2\u010e\u010f\5K&\2\u010f\u0110\5Q)\2\u0110\u0111\5[.\2\u0111"+
		"\u0112\5e\63\2\u0112\u0113\5I%\2\u0113\u0114\5M\'\2\u0114\u0115\5i\65"+
		"\2\u0115\u0116\5[.\2\u0116\"\3\2\2\2\u0117\u0118\5Y-\2\u0118\u0119\5Q"+
		")\2\u0119\u011a\5I%\2\u011a\u011b\5[.\2\u011b\u011c\5g\64\2\u011c\u011d"+
		"\5c\62\2\u011d\u011e\5A!\2\u011e\u011f\5e\63\2\u011f$\3\2\2\2\u0120\u0121"+
		"\5K&\2\u0121\u0122\5Q)\2\u0122\u0123\5[.\2\u0123\u0124\5Y-\2\u0124\u0125"+
		"\5Q)\2\u0125\u0126\5I%\2\u0126\u0127\5[.\2\u0127\u0128\5g\64\2\u0128\u0129"+
		"\5c\62\2\u0129\u012a\5A!\2\u012a\u012b\5e\63\2\u012b&\3\2\2\2\u012c\u012d"+
		"\5c\62\2\u012d\u012e\5I%\2\u012e\u012f\5_\60\2\u012f\u0130\5I%\2\u0130"+
		"\u0131\5g\64\2\u0131\u0132\5Q)\2\u0132\u0133\5c\62\2\u0133(\3\2\2\2\u0134"+
		"\u0135\5_\60\2\u0135\u0136\5A!\2\u0136\u0137\5c\62\2\u0137\u0138\5A!\2"+
		"\u0138*\3\2\2\2\u0139\u013a\5K&\2\u013a\u013b\5Q)\2\u013b\u013c\5[.\2"+
		"\u013c\u013d\5_\60\2\u013d\u013e\5A!\2\u013e\u013f\5c\62\2\u013f\u0140"+
		"\5A!\2\u0140,\3\2\2\2\u0141\u0142\5G$\2\u0142\u0143\5I%\2\u0143\u0144"+
		"\5K&\2\u0144\u0145\5Q)\2\u0145\u0146\5[.\2\u0146\u0147\5Q)\2\u0147\u0148"+
		"\5c\62\2\u0148.\3\2\2\2\u0149\u014a\5I%\2\u014a\u014b\5[.\2\u014b\u014c"+
		"\5g\64\2\u014c\u014d\5]/\2\u014d\u014e\5[.\2\u014e\u014f\5E#\2\u014f\u0150"+
		"\5I%\2\u0150\u0151\5e\63\2\u0151\60\3\2\2\2\u0152\u0156\5\23\n\2\u0153"+
		"\u0156\5\25\13\2\u0154\u0156\5\37\20\2\u0155\u0152\3\2\2\2\u0155\u0153"+
		"\3\2\2\2\u0155\u0154\3\2\2\2\u0156\62\3\2\2\2\u0157\u0158\5e\63\2\u0158"+
		"\u0159\5i\65\2\u0159\u015a\5C\"\2\u015a\u015b\5_\60\2\u015b\u015c\5c\62"+
		"\2\u015c\u015d\5]/\2\u015d\u015e\5E#\2\u015e\u015f\5I%\2\u015f\u0160\5"+
		"e\63\2\u0160\u0161\5]/\2\u0161\64\3\2\2\2\u0162\u0163\5K&\2\u0163\u0164"+
		"\5Q)\2\u0164\u0165\5[.\2\u0165\u0166\5e\63\2\u0166\u0167\5i\65\2\u0167"+
		"\u0168\5C\"\2\u0168\u0169\5_\60\2\u0169\u016a\5c\62\2\u016a\u016b\5]/"+
		"\2\u016b\u016c\5E#\2\u016c\u016d\5I%\2\u016d\u016e\5e\63\2\u016e\u016f"+
		"\5]/\2\u016f\66\3\2\2\2\u0170\u0171\5O(\2\u0171\u0172\5A!\2\u0172\u0173"+
		"\5e\63\2\u0173\u0174\5g\64\2\u0174\u0175\5A!\2\u01758\3\2\2\2\u0176\u0177"+
		"\7\61\2\2\u0177\u0178\7,\2\2\u0178\u017c\3\2\2\2\u0179\u017b\13\2\2\2"+
		"\u017a\u0179\3\2\2\2\u017b\u017e\3\2\2\2\u017c\u017d\3\2\2\2\u017c\u017a"+
		"\3\2\2\2\u017d\u017f\3\2\2\2\u017e\u017c\3\2\2\2\u017f\u0180\7,\2\2\u0180"+
		"\u0181\7\61\2\2\u0181\u0182\3\2\2\2\u0182\u0183\b\35\2\2\u0183:\3\2\2"+
		"\2\u0184\u0185\7\61\2\2\u0185\u0186\7\61\2\2\u0186\u018a\3\2\2\2\u0187"+
		"\u0189\n\2\2\2\u0188\u0187\3\2\2\2\u0189\u018c\3\2\2\2\u018a\u0188\3\2"+
		"\2\2\u018a\u018b\3\2\2\2\u018b\u018d\3\2\2\2\u018c\u018a\3\2\2\2\u018d"+
		"\u018e\b\36\2\2\u018e<\3\2\2\2\u018f\u0191\t\3\2\2\u0190\u018f\3\2\2\2"+
		"\u0191\u0192\3\2\2\2\u0192\u0190\3\2\2\2\u0192\u0193\3\2\2\2\u0193\u0194"+
		"\3\2\2\2\u0194\u0195\b\37\2\2\u0195>\3\2\2\2\u0196\u0197\5c\62\2\u0197"+
		"\u0198\5I%\2\u0198\u0199\5A!\2\u0199\u019a\5W,\2\u019a\u01c9\3\2\2\2\u019b"+
		"\u019c\5I%\2\u019c\u019d\5[.\2\u019d\u019e\5g\64\2\u019e\u019f\5I%\2\u019f"+
		"\u01a0\5c\62\2\u01a0\u01a1\5]/\2\u01a1\u01c9\3\2\2\2\u01a2\u01a3\5[.\2"+
		"\u01a3\u01a4\5i\65\2\u01a4\u01a5\5Y-\2\u01a5\u01a6\5I%\2\u01a6\u01a7\5"+
		"c\62\2\u01a7\u01a8\5Q)\2\u01a8\u01a9\5E#\2\u01a9\u01aa\5]/\2\u01aa\u01c9"+
		"\3\2\2\2\u01ab\u01ac\5W,\2\u01ac\u01ad\5]/\2\u01ad\u01ae\5M\'\2\u01ae"+
		"\u01af\5Q)\2\u01af\u01b0\5E#\2\u01b0\u01b1\5]/\2\u01b1\u01c9\3\2\2\2\u01b2"+
		"\u01b3\5E#\2\u01b3\u01b4\5A!\2\u01b4\u01b5\5c\62\2\u01b5\u01b6\5A!\2\u01b6"+
		"\u01b7\5E#\2\u01b7\u01b8\5g\64\2\u01b8\u01b9\5I%\2\u01b9\u01ba\5c\62\2"+
		"\u01ba\u01c9\3\2\2\2\u01bb\u01bc\5g\64\2\u01bc\u01bd\5I%\2\u01bd\u01be"+
		"\5o8\2\u01be\u01bf\5g\64\2\u01bf\u01c0\5]/\2\u01c0\u01c9\3\2\2\2\u01c1"+
		"\u01c2\5E#\2\u01c2\u01c3\5A!\2\u01c3\u01c4\5G$\2\u01c4\u01c5\5I%\2\u01c5"+
		"\u01c6\5[.\2\u01c6\u01c7\5A!\2\u01c7\u01c9\3\2\2\2\u01c8\u0196\3\2\2\2"+
		"\u01c8\u019b\3\2\2\2\u01c8\u01a2\3\2\2\2\u01c8\u01ab\3\2\2\2\u01c8\u01b2"+
		"\3\2\2\2\u01c8\u01bb\3\2\2\2\u01c8\u01c1\3\2\2\2\u01c9@\3\2\2\2\u01ca"+
		"\u01cb\t\4\2\2\u01cbB\3\2\2\2\u01cc\u01cd\t\5\2\2\u01cdD\3\2\2\2\u01ce"+
		"\u01cf\t\6\2\2\u01cfF\3\2\2\2\u01d0\u01d1\t\7\2\2\u01d1H\3\2\2\2\u01d2"+
		"\u01d3\t\b\2\2\u01d3J\3\2\2\2\u01d4\u01d5\t\t\2\2\u01d5L\3\2\2\2\u01d6"+
		"\u01d7\t\n\2\2\u01d7N\3\2\2\2\u01d8\u01d9\t\13\2\2\u01d9P\3\2\2\2\u01da"+
		"\u01db\t\f\2\2\u01dbR\3\2\2\2\u01dc\u01dd\t\r\2\2\u01ddT\3\2\2\2\u01de"+
		"\u01df\t\16\2\2\u01dfV\3\2\2\2\u01e0\u01e1\t\17\2\2\u01e1X\3\2\2\2\u01e2"+
		"\u01e3\t\20\2\2\u01e3Z\3\2\2\2\u01e4\u01e5\t\21\2\2\u01e5\\\3\2\2\2\u01e6"+
		"\u01e7\t\22\2\2\u01e7^\3\2\2\2\u01e8\u01e9\t\23\2\2\u01e9`\3\2\2\2\u01ea"+
		"\u01eb\t\24\2\2\u01ebb\3\2\2\2\u01ec\u01ed\t\25\2\2\u01edd\3\2\2\2\u01ee"+
		"\u01ef\t\26\2\2\u01eff\3\2\2\2\u01f0\u01f1\t\27\2\2\u01f1h\3\2\2\2\u01f2"+
		"\u01f3\t\30\2\2\u01f3j\3\2\2\2\u01f4\u01f5\t\31\2\2\u01f5l\3\2\2\2\u01f6"+
		"\u01f7\t\32\2\2\u01f7n\3\2\2\2\u01f8\u01f9\t\33\2\2\u01f9p\3\2\2\2\u01fa"+
		"\u01fb\t\34\2\2\u01fbr\3\2\2\2\u01fc\u01fd\t\35\2\2\u01fdt\3\2\2\2\u01fe"+
		"\u01ff\7*\2\2\u01ffv\3\2\2\2\u0200\u0201\7+\2\2\u0201x\3\2\2\2\u0202\u0203"+
		"\7]\2\2\u0203z\3\2\2\2\u0204\u0205\7_\2\2\u0205|\3\2\2\2\u0206\u0207\t"+
		"\36\2\2\u0207~\3\2\2\2\u0208\u0209\t\37\2\2\u0209\u0080\3\2\2\2\u020a"+
		"\u020b\7\'\2\2\u020b\u0082\3\2\2\2\u020c\u020d\5Y-\2\u020d\u020e\5]/\2"+
		"\u020e\u020f\5G$\2\u020f\u0084\3\2\2\2\u0210\u0211\7`\2\2\u0211\u0086"+
		"\3\2\2\2\u0212\u0213\7>\2\2\u0213\u0214\7/\2\2\u0214\u0088\3\2\2\2\u0215"+
		"\u0216\7\u0080\2\2\u0216\u008a\3\2\2\2\u0217\u0221\7?\2\2\u0218\u0219"+
		"\7>\2\2\u0219\u0221\7@\2\2\u021a\u0221\t \2\2\u021b\u021c\7>\2\2\u021c"+
		"\u0221\7?\2\2\u021d\u021e\7@\2\2\u021e\u0221\7?\2\2\u021f\u0221\t!\2\2"+
		"\u0220\u0217\3\2\2\2\u0220\u0218\3\2\2\2\u0220\u021a\3\2\2\2\u0220\u021b"+
		"\3\2\2\2\u0220\u021d\3\2\2\2\u0220\u021f\3\2\2\2\u0221\u008c\3\2\2\2\u0222"+
		"\u0223\7<\2\2\u0223\u008e\3\2\2\2\u0224\u0225\7=\2\2\u0225\u0090\3\2\2"+
		"\2\u0226\u0227\7.\2\2\u0227\u0092\3\2\2\2\u0228\u022a\t\"\2\2\u0229\u0228"+
		"\3\2\2\2\u022a\u022b\3\2\2\2\u022b\u0229\3\2\2\2\u022b\u022c\3\2\2\2\u022c"+
		"\u0234\3\2\2\2\u022d\u0235\3\2\2\2\u022e\u0230\t#\2\2\u022f\u0231\t\""+
		"\2\2\u0230\u022f\3\2\2\2\u0231\u0232\3\2\2\2\u0232\u0230\3\2\2\2\u0232"+
		"\u0233\3\2\2\2\u0233\u0235\3\2\2\2\u0234\u022d\3\2\2\2\u0234\u022e\3\2"+
		"\2\2\u0235\u0094\3\2\2\2\u0236\u0238\t\"\2\2\u0237\u0236\3\2\2\2\u0238"+
		"\u0239\3\2\2\2\u0239\u0237\3\2\2\2\u0239\u023a\3\2\2\2\u023a\u0096\3\2"+
		"\2\2\u023b\u023f\t$\2\2\u023c\u023e\t%\2\2\u023d\u023c\3\2\2\2\u023e\u0241"+
		"\3\2\2\2\u023f\u023d\3\2\2\2\u023f\u0240\3\2\2\2\u0240\u0098\3\2\2\2\u0241"+
		"\u023f\3\2\2\2\u0242\u0243\5e\63\2\u0243\u0244\5Q)\2\u0244\u0247\3\2\2"+
		"\2\u0245\u0247\t%\2\2\u0246\u0242\3\2\2\2\u0246\u0245\3\2\2\2\u0247\u0248"+
		"\3\2\2\2\u0248\u0246\3\2\2\2\u0248\u0249\3\2\2\2\u0249\u009a\3\2\2\2\u024a"+
		"\u024e\7$\2\2\u024b\u024d\13\2\2\2\u024c\u024b\3\2\2\2\u024d\u0250\3\2"+
		"\2\2\u024e\u024f\3\2\2\2\u024e\u024c\3\2\2\2\u024f\u0251\3\2\2\2\u0250"+
		"\u024e\3\2\2\2\u0251\u0252\7$\2\2\u0252\u009c\3\2\2\2\21\2\u0155\u017c"+
		"\u018a\u0192\u01c8\u0220\u022b\u0232\u0234\u0239\u023f\u0246\u0248\u024e"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}